系统签名：https://blog.csdn.net/xk7298/article/details/93332419
https://blog.csdn.net/ngyzqf/article/details/76222074

keytool-importkeypair：https://gitcode.net/mirrors/getfatday/keytool-importkeypair?utm_source=csdn_github_accelerator


后台截屏：Screenshot   https://blog.csdn.net/Guan_li_peng/article/details/128345431

SurfaceControl反射：https://huaweicloud.csdn.net/650956c76b896f66024cc51b.html?dp_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MzIwNDAwNSwiZXhwIjoxNjk2MjE0MjkzLCJpYXQiOjE2OTU2MDk0OTMsInVzZXJuYW1lIjoiamVzc2llMjAwNDA0In0.TQMaSHy2gtlMXXeefts72MWvTaBNMAPAF25X4kg2Bkw

新系统签名：
https://blog.csdn.net/qiaoyl113/article/details/118900246?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169570885916800184185455%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=169570885916800184185455&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-118900246-null-null.142^v94^chatsearchT3_1&utm_term=keytool-importkeypair&spm=1018.2226.3001.4187

系统签名配置到AS：
https://blog.csdn.net/cxq234843654/article/details/51557025?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-2-51557025-blog-76222074.235%5Ev38%5Epc_relevant_sort&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-2-51557025-blog-76222074.235%5Ev38%5Epc_relevant_sort&utm_relevant_index=3



将截图存放
FileOutputStream out = null;
try {
    out = new FileOutputStream(filename);
    bitmap.compress(Bitmap.CompressFormat.PNG, 100, out); // bmp is your Bitmap instance
    // PNG is a lossless format, the compression factor (100) is ignored
} catch (Exception e) {
    e.printStackTrace();
} finally {
    try {
        if (out != null) {
            out.close();
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
File file = new File(context.getFilesDir(), filename);
String path = file.getAbsolutePath();


计时器执行

Timer timer = new Timer();
timer.schedule(new TimerTask() {
    @Override
    public void run() {
        // 在这里执行下一个脚本
    }
}, 5000);  // 5000毫秒后执行



批量下载/安装游戏

// 游戏文件的路径列表
List<String> paths = Arrays.asList("游戏1的文件路径", "游戏2的文件路径", "游戏3的文件路径");

for (String path : paths) {
    File apkFile = new File(path);
    Intent intent = new Intent(Intent.ACTION_VIEW);
    intent.setDataAndType(Uri.fromFile(apkFile), "application/vnd.android.package-archive");
    startActivity(intent);
}

