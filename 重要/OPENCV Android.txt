import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfFloat;
import org.opencv.core.MatOfRect;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.core.CvType;
import org.opencv.core.CvType.CV_32F;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.HOGDescriptor;

public class TemplateMatching {
    public static void main(String[] args) {
        // 读取原始图像和模板图像
        Mat img = Imgcodecs.imread("原始图像.jpg");
        Mat template = Imgcodecs.imread("模板图像.jpg");

        // 使用Imgproc.matchTemplate()函数进行模板匹配
        Mat result = new Mat();
        Imgproc.matchTemplate(img, template, result, Imgproc.TM_CCOEFF_NORMED);

        // 使用Core.minMaxLoc()函数找到最佳匹配位置
        Core.MinMaxLocResult mmr = Core.minMaxLoc(result);
        Point maxLoc = mmr.maxLoc;

        // 获取模板图像的宽度和高度
        int w = template.cols();
        int h = template.rows();

        // 计算最佳匹配位置的左上角和右下角坐标
        Point topLeft = maxLoc;
        Point bottomRight = new Point(topLeft.x + w, topLeft.y + h);

        // 在原始图像上绘制矩形框标记匹配位置
        Imgproc.rectangle(img, topLeft, bottomRight, new Scalar(0, 255, 0), 2);

        // 显示绘制了矩形框的图像
        HighGui.imshow("Result", img);
        HighGui.waitKey(0);
    }
}












import org.opencv.core.*;
import org.opencv.highgui.HighGui;
import org.opencv.imgproc.Imgproc;

public class ImageMatching {
    public static void main(String[] args) {
        // 读取原始图像和模板图像
        Mat source = Imgcodecs.imread("原始图像.jpg");
        Mat template = Imgcodecs.imread("模板图像.jpg");

        // 创建一个用于存储匹配结果的矩阵
        Mat result = new Mat();

        // 使用模板匹配算法进行匹配
        Imgproc.matchTemplate(source, template, result, Imgproc.TM_CCOEFF_NORMED);

        // 获取最佳匹配位置的坐标
        Core.MinMaxLocResult mmr = Core.minMaxLoc(result);
        Point matchLoc = mmr.maxLoc;

        // 在原始图像上绘制矩形框标记匹配位置
        Imgproc.rectangle(source, matchLoc, new Point(matchLoc.x + template.cols(), matchLoc.y + template.rows()), new Scalar(0, 255, 0), 2);

        // 显示绘制了矩形框的图像
        HighGui.imshow("Result", source);
        HighGui.waitKey(0);
    }
}
